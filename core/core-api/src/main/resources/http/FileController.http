### jpg 업로드 테스트
POST http://localhost:8080/api/v1/file
Content-Type: multipart/form-data; boundary=boundary

--boundary
Content-Disposition: form-data; name="image"; filename="cat.jpg"
Content-Type: image/jpeg

< cat.jpg
--boundary--

### png 업로드 테스트
POST http://localhost:8080/api/v1/file
Content-Type: multipart/form-data; boundary=boundary

--boundary
Content-Disposition: form-data; name="image"; filename="cat.jpg"
Content-Type: image/png

< cat.png
--boundary--

### webp 업로드 테스트
POST http://localhost:8080/api/v1/file
Content-Type: multipart/form-data; boundary=boundary

--boundary
Content-Disposition: form-data; name="image"; filename="cat.jpg"
Content-Type: image/webp

< cat.webp
--boundary--

###
DELETE http://localhost:8080/api/v1/file?imageName=77d0d6e7-f5a9-4dc4-8840-b1a88f46ed2a.webp
Content-Type: application/json

### jpg 다운로드 테스트
GET http://localhost:8080/api/v1/file?
    imageName=4e52d0bd-2488-4b94-9a83-1e708a49bec1.jpg

    Content-Type: multipart/form-data

### 1. jpg 업로드 (자동으로 uuid 파일명 저장)
POST http://localhost:8080/api/v1/file
Content-Type: multipart/form-data; boundary=boundary

--boundary
Content-Disposition: form-data; name="image"; filename="cat.jpg"
Content-Type: image/jpeg

< cat.jpg
--boundary--

> {%
    client.global.set("uploadedFileName", response.body);
%}


### 2. 업로드된 파일 다운로드 테스트 (자동으로 파일명 사용)
GET http://localhost:8080/api/v1/file?imageName={{uploadedFileName}}


### 3. 업로드된 파일 삭제 테스트
DELETE http://localhost:8080/api/v1/file?imageName={{uploadedFileName}}
